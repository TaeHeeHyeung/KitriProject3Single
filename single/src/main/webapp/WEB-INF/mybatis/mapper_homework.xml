<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
     
<mapper namespace="com.kitri.single.group.dao.HomeworkDao">
	<insert id="insertHomework" parameterType="homeworkDto">
	insert into single_homework(
		homework_num
		, group_num
		, homework_subject
		, homework_content
		, homework_startdate
		, homework_enddate
		, homework_statecode
	)values(
		homework_num_seq.nextval
		, #{groupNum}
		, #{homeworkSubject}
		, #{homeworkContent}
		, to_date(#{homeworkStartdate}, 'yyyy-mm-dd')
		, to_date(#{homeworkEnddate}, 'yyyy-mm-dd')
		, 1
	)
	</insert>
		
	<select id="selectHomeworkList" parameterType="map" resultType="homeworkDto">
	select 
	    rn
	    , homeworkNum
	    , groupNum
	    , homeworkSubject
	    , homeworkContent
	    , to_char(homeworkStartdate, 'yyyy/mm/dd') homeworkStartdate
	    , to_char(homeworkEnddate, 'yyyy/mm/dd') homeworkEnddate
	    , homeworkStatecode
	    , round(sum(successcode) / memberCount * 100, 0) progressBar
	    , case 
	        when to_char(homeworkEnddate, 'yyyymmdd') >= to_char(sysdate, 'yyyymmdd')
	            then '진행중'
	        else '종료'
	    end status
	from (
	    select 
	        hwrow.*
	        , sg.group_member_count memberCount
	        , decode(hp.hprogress_success, 'S', 1, 0) successcode
	    from (
	        select 
	            rownum rn
	            , hw.*
	        from (
	            select *
	            from (
	                select 
	                    homework_num homeworkNum
	                    , group_num groupNum
	                    , homework_subject homeworkSubject
	                    , homework_content homeworkContent
	                    , homework_startdate homeworkStartdate
	                    , homework_enddate homeworkEnddate
	                    , homework_statecode homeworkStatecode
	                from single_homework 
	                where homework_statecode = 1
	                and group_num = #{groupNum}
	                and to_char(homework_enddate, 'yyyymmdd') >= to_char(sysdate, 'yyyymmdd')
	                order by homework_startdate, single_homework.homework_enddate)
	            union all
	            select *
	            from (
	                select 
	                    homework_num homeworkNum
	                    , group_num groupNum
	                    , homework_subject homeworkSubject
	                    , homework_content homeworkContent
	                    ,  homework_startdate homeworkStartdate
	                    ,  homework_enddate homeworkEnddate
	                    , homework_statecode homeworkStatecode
	                from single_homework 
	                where homework_statecode = 1
	                and group_num = #{groupNum}
	                and to_char(homework_enddate, 'yyyymmdd') &lt; to_char(sysdate, 'yyyymmdd')
	                order by single_homework.homework_startdate, single_homework.homework_enddate)
	            ) hw
	        where rownum &lt;= #{endRow}
	        ) hwrow
	        inner join single_group sg
            	on hwrow.groupNum = sg.group_num 
	        left outer join single_hprogress hp
	            on hwrow.groupNum = hp.group_num
	            and hwrow.homeworkNum = hp.homework_num
	    where rn > #{startRow} )
	group by 
	    rn
	    , homeworkNum
	    , groupNum
	    , homeworkSubject
	    , homeworkContent
	    , homeworkStartdate
	    , homeworkEnddate
	    , homeworkStatecode
	    , memberCount
	order by rn
	</select>
	
	<select id="selectListCount" parameterType="int" resultType="int">
	select count(*)
	from single_homework
	where homework_statecode = '1'
	and group_num = #{groupNum}
	</select>
	
	
	<select id="selectHomework" parameterType="int" resultMap="homework">
	select 
	    hw.homework_num homeworkNum
	    , hw.group_num groupNum
	    , hw.homework_subject homeworkSubject
	    , hw.homework_content homeworkContent
	    , to_char(hw.homework_startdate, 'yyyy/mm/dd') homeworkStartdate
	    , to_char(hw.homework_enddate, 'yyyy/mm/dd') homeworkEnddate
	    , case 
	        when to_char(hw.homework_enddate, 'yyyymmdd') >= to_char(sysdate, 'yyyymmdd')
	            then '진행중'
	        else '종료'
	    end status
	    , hw.homework_statecode homeworkStatecode
	    , sg.group_member_count groupMemberCount
	    , hp.user_id userId
	    , u.user_nickname userNickname
	    , u.user_name userName
	    , hp.hprogress_subject hprogressSubject
	    , hp.hprogress_content hprogressContent
	    , hp.hprogress_success hprogressSuccess
	    , hp.hprogress_file hprogressFile
	    , hp.hprogress_file_origin hprogressFileOrigin
	    , to_char(hp.hprogress_createdate, 'yyyy/mm/dd') hprogressCreatedate
	    , to_char(hp.hprogress_updatedate, 'yyyy/mm/dd') hprogressUpdatedate
	from single_homework hw
		inner join single_group sg
        	on hw.group_num = sg.group_num
	    left outer join single_hprogress hp
	        on hw.homework_num = hp.homework_num
	    left outer join single_user u
	        on hp.user_id = u.user_id
	where
	    hw.homework_statecode = '1'
	    and hw.homework_num = #{homeworkNum}
	order by hp.hprogress_updatedate desc, hp.hprogress_createdate desc
	</select>
	
	<insert id="insertHProgress" parameterType="hprogressDto">
	insert into single_hprogress(
		homework_num
		, user_id
		, group_num
		, hprogress_subject
        , hprogress_content
        , hprogress_success
        , hprogress_file
        , hprogress_file_origin
        , hprogress_createdate
	)values(
	    #{homeworkNum}
	    , #{userId}
	    , #{groupNum}
	    , #{hprogressSubject}
	    , #{hprogressContent}
	    , #{hprogressSuccess}
	    , #{hprogressFile}
	    , #{hprogressFileOrigin}
	    , sysdate
	)
	</insert>
	
	<select id="countHprogressByUserId" parameterType="hprogressDto" resultType="int">
	select count(*)
	from single_hprogress
	where user_id = #{userId}
	and homework_num = #{homeworkNum}
	</select>
	
	<select id="selectHProgress" parameterType="hprogressDto" resultType="hprogressDto">
	select 
	    sh.homework_num homeworkNum
	    , sh.user_id userId
	    , su.user_nickname userNickname
	    , sh.group_num groupNum
	    , sh.hprogress_subject hprogressSubject
	    , sh.hprogress_content hprogressContent
	    , sh.hprogress_success hprogressSuccess
	    , decode(sh.hprogress_success, 'S', '완료', 'P', '진행중', '') hprogressSuccessStr
	    , sh.hprogress_file hprogressFile
	    , sh.hprogress_file_origin hprogressFileOrigin
	    , sh.hprogress_createdate hprogressCreatedate
	    , sh.hprogress_updatedate hprogressUpdatedate
	from single_hprogress sh
		inner join single_user su
			on sh.user_id = su.user_id
	where sh.homework_num = #{homeworkNum}
	and sh.user_id = #{userId}
	</select>
	
	<update id="updateHProgress" parameterType="hprogressDto">
	update single_hprogress
	set
	    hprogress_subject = #{hprogressSubject}
	    , hprogress_content = #{hprogressContent}
	    , hprogress_success = #{hprogressSuccess}
	    <if test="(hprogressFileOrigin != null and hprogressFile != null) or (hprogressFileOrigin == null and hprogressFile == null)">
	    , hprogress_file = #{hprogressFile}
	    , hprogress_file_origin = #{hprogressFileOrigin}
	    </if>
	    , hprogress_updatedate = sysdate
	where
	    homework_num = #{homeworkNum}
	    and user_id = #{userId}
	</update>
	
	<delete id="deleteHProgress" parameterType="hprogressDto">
	delete single_hprogress
	where homework_num = #{homeworkNum}
	and user_id = #{userId}
	</delete>
	
	<resultMap id="homework" type="homeworkDto">
	  	<id property="homeworkNum" column="homeworkNum" />
	  	<result property="groupNum" column="groupNum"/>
	  	<result property="homeworkSubject" column="homeworkSubject"/>
	  	<result property="homeworkContent" column="homeworkContent"/>
	  	<result property="homeworkStartdate" column="homeworkStartdate"/>
	  	<result property="homeworkEnddate" column="homeworkEnddate"/>
	  	<result property="homeworkStatecode" column="homeworkStatecode"/>
	  	<result property="groupMemberCount" column="groupMemberCount"/>
	  	<result property="status" column="status"/>
	  	<collection property="hProgressList" ofType="hprogressDto">
	    	<id property="homeworkNum" column="homeworkNum"/>
	    	<id property="userId" column="userId"/>
	    	<result property="userName" column="userName"/>
	    	<result property="userNickname" column="userNickname"/>
	    	<result property="groupNum" column="groupNum"/>
	    	<result property="hprogressSubject" column="hprogressSubject"/>
	    	<result property="hprogressContent" column="hprogressContent"/>
	    	<result property="hprogressSuccess" column="hprogressSuccess"/>
	    	<result property="hprogressFile" column="hprogressFile"/>
	    	<result property="hprogressFileOrigin" column="hprogressFileOrigin"/>
	    	<result property="hprogressCreatedate" column="hprogressCreatedate"/>
	    	<result property="hprogressUpdatedate" column="hprogressUpdatedate"/>
	  	</collection>
	</resultMap>
</mapper>