<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
     
<mapper namespace="com.kitri.single.board.dao.BoardDao">
	
	<insert id = "writeArticle" parameterType="boardDto">
	insert into single_board values(#{boardNum}, #{boardListNum}, #{userId}, #{userNickname}, #{boardSubject}
	, #{boardContent}, 0, 0, sysdate, null, null, '1')
	</insert>
	
	
	<!-- 작성한 글 보기 -->
	<!-- 원래 set,get이나 생성자를 이용해야 하지만 디티오랑 알리아스명이랑 같으면 자동으로 들어감 -->
	<select id="viewArticle" parameterType="int" resultType="boardDto">
	select board_num boardNum, board_list_num boardListNum, user_id userId, 
		user_nickname userNickname, board_subject boardSubject, 
		board_content boardContent, board_views boardViews, board_like boardLike,
		board_createDate boardCreatedate, 
		board_updatedate boardUpdatedate, board_deletedate boardDeletedate, 
		board_statecode boardStatecode
	from single_board
	where board_statecode = '1'
	and board_num = #{boardNum}
	</select>
	
	
	<!-- 토탈값 -->
	<select id="totalPage" resultType="int" parameterType="boardPageDto">
	select count(*)
	from single_board
	where board_statecode = '1'
	
	<if test="boardListNum != 0">
	and board_list_num = #{boardListNum}
	</if>
	
	<if test="key=='제목'">
	and board_subject like '%'||#{word}||'%'
	</if>
	
	<if test="key=='작성자'">
	and user_nickname like '%'||#{word}||'%'
	</if>
	
	</select>
	
	
	
	<!-- <(오른쪽이 더 큰 표시)를 쓰려면 &lt; 표시로 써야함. -->
	<select id="findByRows" parameterType="boardPageDto" resultType="boardDto" >
	select *
	from (
	    select rownum rn, a.*
	    from(
		    select 
				board_num boardNum, board_list_num boardListNum, user_id userId, 
				user_nickname userNickname, board_subject boardSubject, 
				board_content boardContent, board_views boardViews, board_like boardLike,
				board_createDate boardCreatedate, 
				board_updatedate boardUpdatedate, board_deletedate boardDeletedate, 
				board_statecode boardStatecode
		    from single_board
		    where board_statecode = '1'
		    <if test="boardListNum != 0">
			and board_list_num = #{boardListNum}
			</if>
			
			<if test="key=='제목'">
			and board_subject like '%'||#{word}||'%'
			</if>
			
			<if test="key=='작성자'">
			and user_nickname like '%'||#{word}||'%'
			</if>

		    order by board_createdate desc
		    ) a
		<![CDATA[
	    where rownum <= #{endRow}
	    ]]>
	    ) 
	where rn >= #{startRow}
	</select>


	<!-- 메인 이달의 추천수 -->
	<select id="monthList" resultType="boardDto">
	<![CDATA[
	select rownum, board.*
	from (select board_num boardNum, board_list_num boardListNum, user_id userId, 
	                user_nickname userNickname, board_subject boardSubject, 
	                board_content boardContent, board_views boardViews, board_like boardLike,
	                board_createDate boardCreatedate, 
	                board_updatedate boardUpdatedate, board_deletedate boardDeletedate, 
	                board_statecode boardStatecode
	    from single_board
	    where board_statecode = '1'
	    and to_char(board_createdate, 'yyyymm') = to_char(sysdate, 'yyyymm')
	    order by board_like desc, boardCreatedate desc) board
	where rownum <= 5
	]]>
	</select>
	
	
	
	<select id="rankingUsers" resultType="userDto">
	select 
	    rownum rn
	    , rankinguser.user_id userID
	    , rankinguser.user_profile userProfile
	    , rankinguser.user_nickname userNickname
	    , rankinguser.totallike totalLike
	    , rankinguser.currentdate currentDate
	from (
	    select 
	        sb.user_id    
	        , su.user_profile
	        , sb.user_nickname
	        , sum(sb.board_like) totallike
	        , max(sb.board_createdate) currentdate
	    from single_board sb
	    	inner join single_user su
	    		on sb.user_id = su.user_id
	    where 
	        sb.board_statecode = '1'
	        and to_char(sb.board_createdate, 'yyyymm') = to_char(sysdate, 'yyyymm')
	    group by 
	    	sb.user_id
	    	, su.user_profile
	        , sb.user_nickname
	    order by totallike desc, currentdate desc ) rankinguser
	<![CDATA[ where rownum <= 3 ]]>
	</select>
	
	
	<select id="rankingBoards" parameterType="String" resultType="boardDto">
	select rownum
	    , rankingboard.board_num boardNum
	    , rankingboard.board_list_num boardListNum
	    , rankingboard.user_id userId
	    , rankingboard.user_nickname userNickname
	    , rankingboard.board_subject boardSubject
	    , rankingboard.board_content boardContent
	    , rankingboard.board_views boardViews
	    , rankingboard.board_like boardLike
	    , rankingboard.board_createDate boardCreatedate
	    , rankingboard.board_updatedate boardUpdatedate
	    , rankingboard.board_deletedate boardDeletedate
	    , rankingboard.board_statecode boardStatecode
	from (
	    select *
	    from single_board
	    where board_statecode = '1'
	    and user_id = #{userId}
	    order by board_like desc
	    ) rankingboard
	<![CDATA[ where rownum <= 3 ]]>
	</select>
	
	
	<update id="boardDelete" parameterType="int">
	update single_board 
	set board_statecode = 0
	where board_num = #{boardNum}
	</update>
	
	
	<!-- 카테고리 최신글 -->
	<select id="news" resultType="boardDto">
	select 
	    board_num boardNum, board_list_num boardListNum, user_id userId, 
	    user_nickname userNickname, board_subject boardSubject, 
	    board_content boardContent, board_views boardViews, board_like boardLike,
	    board_createDate boardCreatedate, 
	    board_updatedate boardUpdatedate, board_deletedate boardDeletedate, 
	    board_statecode boardStatecode
	from (
	    select  rownum, sb.*
	    from single_board sb
	    where board_statecode = '1'
	    order by board_createDate desc
	    )
	where rownum = 1 
	</select>
	
	<!-- 카테고리 유저띄우기 -->
	<select id="nowUser" resultType="userDto">
	select *
	from single_user
	where user_statecode = '1'
	</select>
	
	<!-- 카테고리 유저 글 총 수 -->
	<select id="totalCnt" parameterType="String" resultType="int">
	select count(*)
	from single_board
	where board_statecode = '1'
	<if test="value != null">
	and user_id = #{value}
	</if>
	</select>
	
	<!-- 카테고리 유저 좋아요 총 수 -->
	<select id="totalCntL" parameterType="String" resultType="int">
	select sum(board_like)
	from single_board
	where board_statecode = '1'
	<if test="value != null">
	and user_id = #{value}
	</if>
	</select>
	
	
	
</mapper>
   
   
   
   
   
   