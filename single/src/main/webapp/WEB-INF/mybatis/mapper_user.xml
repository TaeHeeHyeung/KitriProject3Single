<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

 

<mapper namespace="com.kitri.single.user.dao.UserDao">


	<!-- <<<<<<<<<<<<<<<<내 프로필 >>>>>>>>>>>>>>>>>>>>>> -->
	
	<!-- 내 정보 가져오기  -->
	<select id="userInfom" parameterType="string" resultType="userDto">
	select 
	    user_id as userId,
	    user_name as userName,
	    user_nickname as userNickname,
	    user_phone as userPhone
	from single_user
	where user_id = #{id}
	</select>
	
	<!-- 회원탈퇴  -->
 	<update id="userDelete" parameterType="string">
	update single_user
	set USER_STATECODE = '0',
	    USER_OUTDATE = sysdate
	where user_id = #{userId}
 	</update>




	
	<!-- <<<<<<<<<<<<<<<<나의 모임 관리 >>>>>>>>>>>>>>>>>>>>>> -->
	
	<!-- 나의 모임관리(전체보기) -->
	<select id="getGroupAll" parameterType="string" resultType="groupDto">
		select
			g.group_num groupNum
			, m.user_id as userId
			, g.group_name as groupName
			, g.group_description as groupDescription
			, g.group_img_src as groupImgSrc
			, g.group_member_count as groupMemberCount
			, g.group_member_limit as groupMemberLimit
			, g.group_main_place as groupMainPlace
			, to_char(g.group_createdate, 'yyyy/mm/dd') as groupCreatedate
		from single_group g, single_group_member m
		where g.group_num = m.group_num
			and g.group_statecode = '1'
			and m.user_id = #{userId}
	</select>


	<!-- 나의 모임관리(개설모임,가입모임) -->
	<select id="getMyGroup" parameterType="map" resultType="groupDto">
	select
			g.group_num groupNum
			, m.user_id as userId
			, g.group_name as groupName
			, g.group_description as groupDescription
			, g.group_img_src as groupImgSrc
			, g.group_member_count as groupMemberCount
			, g.group_member_limit as groupMemberLimit
			, g.group_main_place as groupMainPlace
			, to_char(g.group_createdate, 'yyyy/mm/dd') as groupCreatedate
		from single_group g, single_group_member m
		where g.group_num = m.group_num
			and g.group_statecode = '1'
			and m.user_id = #{userId}
			<if test="option == 'groupleader' " >
			and m.group_member_statecode = 'L'
			</if>
			<if test="option == 'groupmember' " >
			and m.group_member_statecode = 'M'
			</if>
	</select>
	
	<!-- 나의 모임관리(모임 상세페이지) -->
	<select id="getGroup" parameterType="int" resultType="groupDto">
	select 
        g.group_num groupNum
        , g.group_category_num groupCategoryNum
        , gc.group_category_name groupCategoryName
        , g.group_name as groupName
        , g.group_description as groupDescription
        , g.group_img_src as groupImgSrc
        , g.group_member_count as groupMemberCount
        , g.group_member_limit as groupMemberLimit	    
        , g.group_main_place as groupMainPlace
        , to_char(g.group_createdate, 'yyyy/mm/dd') as groupCreatedate
    from 
        single_group g
        left outer join single_group_category gc
            on g.group_category_num = gc.group_category_num
    where g.group_statecode = '1'
   	and g.group_num = #{groupNum}
	</select>
	
	
	
	<!-- <<<<<<<<<<<<<<<<찜모임 >>>>>>>>>>>>>>>>>>>>>> -->
	
	<!-- 찜모임관리(전체보기) -->
	<select id="getStampGroup" parameterType="string" resultType="groupDto">
	select 
	    g.group_num groupNum
	    , g.group_name as groupName
	    , g.group_description as groupDescription
	    , g.group_img_src as groupImgSrc
	    , g.group_member_count as groupMemberCount
	    , g.group_member_limit as groupMemberLimit	    
	    , g.group_main_place as groupMainPlace
	    , to_char(g.group_createdate, 'yyyy/mm/dd') as groupCreatedate
	from single_group g, single_stamp p
	where g.group_num = p.group_num
	    and g.group_statecode = '1'
	    and p.user_id = #{userId}
	</select>
	 
 	<!-- 찜모임관리(카테고리별 보기) -->
	<select id="getMyStamp" parameterType="map" resultType="groupDto" >
	select 
	    g.group_num groupNum
	    , g.group_name as groupName
	    , g.group_description as groupDescription
	    , g.group_img_src as groupImgSrc
	    , g.group_member_count as groupMemberCount
	    , g.group_member_limit as groupMemberLimit	    
	    , g.group_main_place as groupMainPlace
	    , to_char(g.group_createdate, 'yyyy/mm/dd') as groupCreatedate
	from single_group g, single_stamp p
	where g.group_num = p.group_num
	    and g.group_statecode = '1'
	    and p.user_id = #{userId}
	    <if test="option == 'study' " >
		 and g.group_category_num = 1
		</if>
		<if test="option == 'hobby' " >
		 and g.group_category_num = 2
		</if>
		<if test="option == 'friend' " >
		 and g.group_category_num = 3
		</if>
		<if test="option == 'foodtour' " >
		 and g.group_category_num = 4
		</if>  
	</select>

 
 	<!-- 찜한 모임 취소  -->
 	<delete id="stampDelete" parameterType="map">
 	delete from single_stamp
    where user_id = #{userId}
    	and group_num = #{groupNum}
 	</delete>

<!-- 	<update id="updateGroupMember" parameterType="groupMemberDto"> -->
<!-- 	update single_group_member -->
<!-- 	set -->
<!-- 		group_member_statecode = #{groupMemberStatecode} -->
<!-- 		<if test="groupMemberStatecode != null and (groupMemberStatecode eq 'M'.toString) "> -->
<!-- 		, group_joindate = sysdate -->
<!-- 		, group_requestdate = null -->
<!-- 		</if> -->
<!-- 	where group_num = upper(#{groupNum}) -->
<!-- 	and user_id = #{userId} -->
<!-- 	</update> -->

<!-- <update id="groupMemberCountDown" parameterType="int"> -->
<!-- 	update single_group -->
<!-- 	set -->
<!-- 	    group_member_count = group_member_count - 1 -->
<!-- 	where  -->
<!-- 		group_statecode = 1 -->
<!-- 		and group_num = #{groupNum} -->
<!-- 		and group_member_count > 1 -->
<!-- 	</update> -->

</mapper>